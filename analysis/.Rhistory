s(phonlengthscale) +
s(AoA_objscaled, k=3) +
s(subtlexzipfscale) +
s(concscale) +
s(cat,bs='re')+
s(cat,phonlengthscale,bs='re')+
s(cat,AoA_objscaled,bs='re')+
s(cat,subtlexzipfscale,bs='re')+
s(cat,concscale,bs='re'),
data = dataloan2[!is.na(dataloan2$AoA_objscaled),],
family='binomial')
```
```{r}
summary(m0.obj)
```
Very similar results.  For example, almost all coefficients are the same:
```{r}
plot(m0.obj$coefficients, m0$coefficients[names(m0.obj$coefficients)])
```
The outlier is the coefficient for `subtlexzipfscale`.
And chi squared terms are similar:
```{r}
m0S = summary(m0)
m0.objS = summary(m0.obj)
cbind(m0=m0S$chi.sq,m0.obj=m0.objS$chi.sq)[1:4,]
```
## Objective AoA: Model plots
Visualise the model smooth terms, independent of influence of random effects. The code is hidden, but you can view it in the Rmd file.
```{r echo=F,fig.show='hide'}
# from itsadug: plot ignoring random effects
px = plot_smooth(m0.obj,view="subtlexzipfscale",
rm.ranef = T,print.summary=F)
px$fv$fit = logit2per(px$fv$fit)
px$fv$ul = logit2per(px$fv$ul)
px$fv$ll = logit2per(px$fv$ll)
px$fv$subtlexzipfscale = px$fv$subtlexzipfscale * attr(dataloan2$subtlexzipfscale,"scaled:scale") + attr(dataloan2$subtlexzipfscale,"scaled:center")
gFreqO = ggplot(px$fv, aes(x=subtlexzipfscale,y=fit)) +
geom_ribbon(aes(ymin=ll,ymax=ul), alpha=0.3) +
geom_line(size=1) +
ylab("Probability of borrowing") +
xlab("Frequency") +
coord_cartesian(ylim=c(0,1))
px = plot_smooth(m0.obj,view="AoA_objscaled", rm.ranef = T, print.summary=F)
px$fv$fit = logit2per(px$fv$fit)
px$fv$ul = logit2per(px$fv$ul)
px$fv$ll = logit2per(px$fv$ll)
px$fv$AoA_objscaled = px$fv$AoA_objscaled * attr(dataloan2$AoA_objscaled,"scaled:scale") + attr(dataloan2$AoA_objscaled,"scaled:center")
gAoAO = ggplot(px$fv, aes(x=AoA_objscaled,y=fit)) +
geom_ribbon(aes(ymin=ll,ymax=ul), alpha=0.3) +
geom_line(size=1) +
ylab("Probability of borrowing") +
xlab("Age of acquisition (objective)")+
coord_cartesian(ylim=c(0,1))
px = plot_smooth(m0.obj,view="phonlengthscale", rm.ranef = T, print.summary=F)
px$fv$fit = logit2per(px$fv$fit)
px$fv$ul = logit2per(px$fv$ul)
px$fv$ll = logit2per(px$fv$ll)
px$fv$phonlengthscale = px$fv$phonlengthscale * phonlength.scale + phonlength.center
gLenO = ggplot(px$fv, aes(x=phonlengthscale,y=fit)) +
geom_ribbon(aes(ymin=ll,ymax=ul), alpha=0.3) +
geom_line(size=1) +
ylab("Probability of borrowing") +
xlab("Word length")+
coord_cartesian(ylim=c(0,1))
```
```{r echo=F}
grid.arrange(gLenO, gFreqO, gAoAO, nrow=1)
pdf("../results/graphs/English_ModelResults_ObjectiveAoA_NoRF.pdf",
height =3,width = 8)
grid.arrange(gLenO, gFreqO, gAoAO, nrow=1)
dev.off()
```
Note that concreteness is marginally significant in this model.  However, the trend is weak, and the decrease is only significant (according to the derivitives test) for a small section of the range:
```{r fig.show="hide"}
px = plot_smooth(m0.obj,view="concscale", rm.ranef = T, print.summary=F)
px$fv$fit = logit2per(px$fv$fit)
px$fv$ul = logit2per(px$fv$ul)
px$fv$ll = logit2per(px$fv$ll)
px$fv$phonlengthscale = px$fv$concscale * conc.scale + conc.center
```
```{r}
gConcO = ggplot(px$fv, aes(x=concscale,y=fit)) +
geom_ribbon(aes(ymin=ll,ymax=ul), alpha=0.3) +
geom_line(size=1) +
ylab("Probability of borrowing") +
xlab("Concreteness")+
coord_cartesian(ylim=c(0,1))
gConcO
plotGAMSignificantSlopes(m0.obj,'concscale','Concreteness',aoaLab = "AoA_objscaled")
```
```{r echo=F, eval=F}
# Old code for making graphs without controlling for random effects
pxobj = plot.gam(m0.obj,select=1, xlab="Word length", ylab="Log odds of borrowing",shade = T)
y = logit2per(pxobj[[1]]$fit)
x = pxobj[[1]]$x *phonlength.scale + phonlength.center
se.upper = logit2per(pxobj[[1]]$fit+pxobj[[1]]$se)
se.lower = logit2per(pxobj[[1]]$fit-pxobj[[1]]$se)
dx = data.frame(x=x,y=y,ci.upper=se.upper,ci.lower=se.lower)
plenobj = ggplot(dx, aes(x=x,y=y))+
geom_ribbon(aes(ymin=ci.lower,ymax=ci.upper), alpha=0.3)+
geom_line(size=1) +
xlab("Word Length")+
ylab("Probability of borrowing")+
coord_cartesian(ylim = c(0,1))
paoaobj = rescaleGam(pxobj,2,dataloan2$AoAscale, "Age of acquisition")
pfreqobj = rescaleGam(pxobj,3,dataloan2$subtlexzipfscale, "Frequency")
pconcobj = rescaleGam(pxobj,4,dataloan2$concscale, "Concreteness")
pconcobj
grid.arrange(plenobj,pfreqobj,paoaobj, nrow=1)
```
# Comparison to Swadesh list words
Match up words with presence or absence in Swedesh list
```{r}
dx = dataloan2[,      c("subtlexzipf",
"AoA",
"phonlength",
"conc",
"Swadesh"),]
names(dx) = c("Frequency","AoA","Length","Concreteness","Swadesh")
dx$Swadesh = c("No","Yes")[1+as.numeric(dx$Swadesh)]
dx = dx[complete.cases(dx),]
```
Plot the distributions (code hidden but available in the Rmd file):
```{r echo=F}
dFreq = ggplot(dx,aes(Frequency, fill=Swadesh)) +
geom_density(alpha=0.6) + theme_minimal() +
scale_fill_manual(values = c(gray(0.1),gray(0.8))) +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
panel.grid = element_blank(),
legend.position = 'none',
plot.margin=unit(c(1,0.1,0.2,0.1),"cm"))
dAoA = ggplot(dx,aes(AoA, fill=Swadesh)) +
geom_density(alpha=0.6) + theme_minimal() +
scale_fill_manual(values = c(gray(0.2),gray(0.8))) +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
panel.grid = element_blank(),
legend.position = 'none')
dLen = ggplot(dx,aes(Length, fill=Swadesh)) +
geom_density(bw=1,alpha=0.6) + theme_minimal() +
scale_fill_manual(values = c(gray(0.2),gray(0.8)),
breaks = c("Yes","No"),
labels = c("Swadesh list words","Wider lexicon")) +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
panel.grid = element_blank(),
legend.title = element_blank(),
legend.position = 'top')
dConc = ggplot(dx,aes(Concreteness, fill=Swadesh)) +
geom_density(alpha=0.6) + theme_minimal() +
scale_fill_manual(values = c(gray(0.2),gray(0.8))) +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
panel.grid = element_blank(),
legend.position = 'none')
grid.arrange(dLen,dFreq,dAoA,dConc, nrow=2)
pdf("../results/graphs/English_Distribution.pdf",
width= 5.5, height = 4)
grid.arrange(dLen,dFreq,dAoA,dConc, nrow=2)
dev.off()
```
Try a PCA plot:
```{r}
dx = dataloan2[,      c("subtlexzipfscale",
"AoAscale",
"phonlengthscale",
"concscale",
"Swadesh"),]
names(dx) = c("Frequency","AoA","Length","Conc.","Swadesh")
dx$Swadesh = c("No","Yes")[1+as.numeric(dx$Swadesh)]
dx = dx[complete.cases(dx),]
pc = prcomp(dx[, 1:4])
gpc1 = autoplot(pc, data = dx, colour = 'Swadesh',
loadings = TRUE, loadings.colour = 'black', loadings.label.colour='black',
loadings.label = TRUE, loadings.label.size = 5,frame = TRUE, frame.type = 'norm') +
theme(legend.position = 'none')
gpc2 = autoplot(pc, data = dx, x = 1,y = 3,
colour = 'Swadesh',
loadings = TRUE, loadings.colour = 'black', loadings.label.colour='black',
loadings.label = TRUE, loadings.label.size = 5,frame = TRUE, frame.type = 'norm')
gxpc123 = grid.arrange(gpc1, gpc2, nrow=1, widths=c(0.8,1))
pdf("../results/graphs/English_Swadesh_PCA.pdf",
width = 10, height= 4.5)
plot(gxpc123)
dev.off()
```
## Borrowing factors in Swadesh vs non-Swadesh words
First, we make a new model with a fixed effect for whether the word is in the Swadesh list:
```{r}
dataloan2$Swadesh=factor(dataloan2$Swadesh)
mSwadesh = update(m0,~.+Swadesh)
```
Now add an interaction for a word's length and whether it's in the Swadesh list.  Then test whether the fit to the data significantly improves.
```{r}
mSwadeshLen = update(mSwadesh,~.+
s(phonlengthscale,by=Swadesh))
lrtest(mSwadesh,mSwadeshLen)
```
Same for AoA:
```{r}
mSwadeshAoA = update(mSwadesh,~.+
s(AoAscale,by=Swadesh))
lrtest(mSwadesh,mSwadeshAoA)
```
Same for Frequency:
```{r}
mSwadeshFreq = update(mSwadesh,~.+
s(subtlexzipfscale,by=Swadesh))
lrtest(mSwadesh,mSwadeshFreq)
```
Same for Concreteness:
```{r}
mSwadeshConc = update(mSwadesh,~.+
s(concscale,by=Swadesh))
lrtest(mSwadesh,mSwadeshConc)
```
The model is not improved by adding an interaction between any predictor and whether a word is in the Swadesh list.  That is, the relationship betwen the predictors and borrowing is not significantly different for Swadesh words versus non-Swadesh words.
\newpage
# Sensitivity analyses
## Individual models for each variable
Check that the response function is similar when including a variable alone in a model.  Run seperate models with single predictors:
```{r}
m0.length = bam(bor15.cat ~
s(phonlengthscale)+
s(cat,bs='re')+
s(cat,phonlengthscale,bs='re'),
data = dataloan2,
family='binomial')
m0.AoA = bam(bor15.cat ~
s(AoAscale)+
s(cat,bs='re')+
s(cat,AoAscale,bs='re'),
data = dataloan2,
family='binomial')
m0.frequency = bam(bor15.cat ~
s(subtlexzipfscale)+
s(cat,bs='re')+
s(cat,subtlexzipfscale,bs='re'),
data = dataloan2,
family='binomial')
m0.conc = bam(bor15.cat ~
s(concscale)+
s(cat,bs='re')+
s(cat,concscale,bs='re'),
data = dataloan2,
family='binomial')
```
Plot the original curves against the single-variable model curves:
```{r}
par(mfrow=c(2,2), mar=c(1,2,3,1))
mx = list(m0.length, m0.AoA, m0.frequency,m0.conc)
mx.labels = c("Length","AoA","Frequency","Concreteness")
for(i in 1:4){
plot(m0,select=i,main=mx.labels[i],ylim=c(-4,4))
par(new=T)
plot(mx[[i]],select=1,ylim=c(-4,4), col=2,ylab="")
legend(-1,-1.5,legend = c("Original","Single variable"),col=1:2,lty=1, bty='n')
}
par(mfrow=c(1,1))
```
Compare the EDF values.
```{r}
orig.edf = summary(m0)$edf[1:4]
single.edf = lapply(mx,function(X){summary(X)$edf[1]})
plot(orig.edf,
single.edf,
xlab="Original EDF",
ylab="Single variable EDF",
ylim=c(0,3),xlim=c(0,3.5),
main="Compare EDF values")
text(orig.edf,single.edf,mx.labels,pos=2)
abline(0,1,lty=2)
```
The results for length and AoA are almost identical.  The results for frequency are similar (non-linear relationship with a peak in the middle), although the significant slope is now for the higher values:
```{r}
plotGAMSignificantSlopes(m0.frequency,"subtlexzipfscale","Frequency")
```
By itself, concreteness is a signficant predictor.
```{r}
plotGAMSignificantSlopes(m0.conc,"concscale","Concreteness")
```
## GAM with PoS as fixed effects
Part of speech was modelled above as a random effect.  Here we show that the estimates differ very little if we treat part of speech as a fixed effect:
```{r}
m0.posFE = bam(bor15.cat ~
s(phonlengthscale) +
s(AoAscale) +
s(subtlexzipfscale) +
s(concscale) +
cat,
data = dataloan2,
family='binomial')
```
```{r}
vars = c("phonlengthscale","AoAscale","subtlexzipfscale","concscale")
varLabels = c("Length","AoA","Frequency","Concreteness")
for(i in 1:4){
plot(m0,select=i,main=varLabels[i],ylim=c(-4,4))
par(new=T)
plot(m0.posFE,select=i,ylim=c(-4,4), col=2)
legend(0,-2,legend = c("Original","PoS Fixed"),col=1:2,lty=1)
}
```
Test the inclusion of interactions between cat and other fixed effects by log ratio tests:
```{r}
m0.posFE.catByLen = update(m0.posFE,~.+s(phonlengthscale,by=cat))
lrtest(m0.posFE,m0.posFE.catByLen)
```
Adding an interaction between part of speech and length results in a better fit.  However, since there is a realtively small range of unique length values, and that many part of speech categories have very limited length ranges, then perfect seperation occurs and the model has poor convergence.  The results of the model suggest that length has a bigger effect size for some parts of speech than others.  This is better captured by a mixed effects model.  The estimates for other fixed effects are not qualitatively different in this model.
cat x AoA is not significant:
```{r}
m0.posFE.catByAoA = update(m0.posFE.catByLen,~.+s(AoAscale,by=cat))
lrtest(m0.posFE.catByLen,m0.posFE.catByAoA)
```
cat x frequency is not significant:
```{r}
m0.posFE.catByFreq = update(m0.posFE.catByLen,~.+s(subtlexzipfscale,by=cat))
lrtest(m0.posFE.catByLen,m0.posFE.catByFreq)
```
cat x concreteness is not significant:
```{r}
m0.posFE.catByConc = update(m0.posFE.catByLen,~.+s(concscale,by=cat))
lrtest(m0.posFE.catByLen,m0.posFE.catByConc)
```
\newpage
## Controlling for source language length
We attempted to obtain estimates for the distribution of word lengths in source languages (for the English dataset). This is very difficult, because there are 25 source languages from across the world, and very few of these have large word list sources. The only possibility is the Automatic Similarity Judgement Program database, which contains a small standard list of words for many languages. We obtained these words for the source languages (subsituting phylogenetically close languages for those with no data, words which were not borrowed were matched to modern English data from the ASJP).  We calculated the average word length for each source language. See the file `processing/GetSourceLanguageWordLengths.R` for details.
Compare the original model with a model with control for average donor langauge word length.
```{r warning=F}
mMeanLenControl = update(m0, ~.+s(SLMWL,k=3))
summary(mMeanLenControl)
plot(mMeanLenControl,select=10)
lrtest(m0,mMeanLenControl)
mLenFreqControl = update(m0, ~.+s(SWF))
summary(mLenFreqControl)
plot(mLenFreqControl,select=10)
mx.labels = c("Length","AoA","Frequency","Concreteness")
par(mfrow=c(2,2),mar=c(2,2,1,2))
for(i in 1:4){
plot(m0,select=i,main=mx.labels[i],ylim=c(-4,4))
par(new=T)
plot(mLenFreqControl,select=i,ylim=c(-4,4), col=2,ylab="")
legend(-1,-1.5,legend = c("Original","With length control"),col=1:2,lty=1, bty='n')
}
par(mfrow=c(1,1))
plot(mLenFreqControl)
plot(mLenFreqControl)
i = 4
i = 1
plot(m0,select=i,main=mx.labels[i],ylim=c(-4,4))
plot(mLenFreqControl,select=i,ylim=c(-4,4), col=2,ylab="")
plot(mLenFreqControl,select=i)
plot(m0,select=i,main=mx.labels[i],ylim=c(-4,4))
mx.labels = c("Length","AoA","Frequency","Concreteness")
par(mfrow=c(2,2),mar=c(2,2,1,2))
for(i in 1:4){
plot(m0,select=i,main=mx.labels[i],ylim=c(-10,10))
par(new=T)
plot(mLenFreqControl,select=i,ylim=c(-10,10), col=2,ylab="")
legend(-1,-1.5,legend = c("Original","With length control"),col=1:2,lty=1, bty='n')
}
par(mfrow=c(1,1))
plotGAMSignificantSlopes(mLenFreqControl,"SWF","SWF")
terms(mLenFreqControl)
plotGAMSignificantSlopes(mLenFreqControl,"SWF","SWF")
plotGAMSignificantSlopes(mMeanLenControl,"SLMWL","SLMWL")
mLenFreqControl = bam(bor15.cat ~
s(phonlengthscale) +
s(SWF,k=3) +
s(AoAscale) +
s(subtlexzipfscale) +
s(concscale) +
s(cat,bs='re')+
s(cat,phonlengthscale,bs='re')+
s(cat,AoAscale,bs='re')+
s(cat,subtlexzipfscale,bs='re')+
s(cat,concscale,bs='re'),
data = dataloan2,
family='binomial')
plotGAMSignificantSlopes(mMeanLenControl,"SLMWL","SLMWL")
mMeanLenControl = bam(bor15.cat ~
s(phonlengthscale) +
s(SLMWL,k=3) +
s(AoAscale) +
s(subtlexzipfscale) +
s(concscale) +
s(cat,bs='re')+
s(cat,phonlengthscale,bs='re')+
s(cat,AoAscale,bs='re')+
s(cat,subtlexzipfscale,bs='re')+
s(cat,concscale,bs='re'),
data = dataloan2,
family='binomial')
plotGAMSignificantSlopes(mMeanLenControl,"SLMWL","SLMWL")
plotGAMSignificantSlopes(mMeanLenControl,"phonlengthscale",'phonlengthscale')
summary(mMeanLenControl)
plot(mMeanLenControl,select=10)
plotGAMSignificantSlopes(mMeanLenControl,
"phonlengthscale",'phonlengthscale')
plotGAMSignificantSlopes(mMeanLenControl,
"SLMWL",'SLMWL')
"phonlengthscale",'phonlengthscale')
plotGAMSignificantSlopes(mMeanLenControl,
"phonlengthscale",'phonlengthscale')
mLenFreqControl = update(m0, ~.+s(SWF,k=3))
summary(mLenFreqControl)
plot(mLenFreqControl,select=10)
m0 = lmer(bor15.cat ~
phonlengthscale + (1+phonlengthscale | cat),
data = dataloan2,
family='binomial')
library(lme4)
m0 = glmer(bor15.cat ~
phonlengthscale + (1+phonlengthscale | cat),
data = dataloan2,
family='binomial')
summary(m0)
mx.labels = c("Length","AoA","Frequency","Concreteness")
par(mfrow=c(2,2),mar=c(2,2,1,2))
for(i in 1:4){
plot(m0,select=i,main=mx.labels[i],ylim=c(-4,4))
par(new=T)
if(i>1){
i=i+1
}
plot(mMeanLenControl,select=i,ylim=c(-4,4), col=2,ylab="")
legend(-1,-1.5,legend = c("Original","With length control"),col=1:2,lty=1, bty='n')
}
par(mfrow=c(1,1))
mx.labels = c("Length","AoA","Frequency","Concreteness")
par(mfrow=c(2,2),mar=c(2,2,1,2))
for(i in 1:4){
plot(m0,select=i,main=mx.labels[i],ylim=c(-4,4))
par(new=T)
if(i>1){
i=i+1
}
plot(mMeanLenControl,select=i,ylim=c(-4,4), col=2,ylab="")
legend(-1,-1.5,legend = c("Original","With length control"),col=1:2,lty=1, bty='n')
}
par(mfrow=c(1,1))
mx.labels = c("Length","AoA","Frequency","Concreteness")
par(mfrow=c(2,2),mar=c(2,2,1,2))
for(i in 1:4){
plot(m0,select=i,main=mx.labels[i],ylim=c(-4,4))
if(i>1){
i=i+1
}
par(new=T)
plot(mMeanLenControl,select=i,ylim=c(-4,4), col=2,ylab="")
legend(-1,-1.5,legend = c("Original","With length control"),col=1:2,lty=1, bty='n')
}
par(mfrow=c(1,1))
mx.labels = c("Length","AoA","Frequency","Concreteness")
par(mfrow=c(2,2),mar=c(2,2,1,2))
for(i in 1:4){
i2 = i
if(i2>1){
i2=i2+1
}
plot(m0,select=i,main=mx.labels[i],ylim=c(-4,4))
par(new=T)
plot(mMeanLenControl,select=i2,ylim=c(-4,4), col=2,ylab="")
legend(-1,-1.5,legend = c("Original","With length control"),col=1:2,lty=1, bty='n')
}
par(mfrow=c(1,1))
i = 1
i2 = i
if(i2>1){
i2=i2+1
}
plot(m0,select=i,main=mx.labels[i],ylim=c(-4,4))
par(new=T)
plot(mMeanLenControl,select=i2,ylim=c(-4,4), col=2,ylab="")
m0 = bam(bor15.cat ~
s(phonlengthscale) +
s(AoAscale) +
s(subtlexzipfscale) +
s(concscale) +
s(cat,bs='re')+
s(cat,phonlengthscale,bs='re')+
s(cat,AoAscale,bs='re')+
s(cat,subtlexzipfscale,bs='re')+
s(cat,concscale,bs='re'),
data = dataloan2,
family='binomial')
mMeanLenControl = bam(bor15.cat ~
s(phonlengthscale) +
s(AoAscale) +
s(subtlexzipfscale) +
s(concscale) +
s(SLMWL,k=3) +
s(cat,bs='re')+
s(cat,phonlengthscale,bs='re')+
s(cat,AoAscale,bs='re')+
s(cat,subtlexzipfscale,bs='re')+
s(cat,concscale,bs='re'),
data = dataloan2,
family='binomial')
summary(mMeanLenControl)
mx.labels = c("Length","AoA","Frequency","Concreteness")
par(mfrow=c(2,2),mar=c(2,2,1,2))
for(i in 1:4){
plot(m0,select=i,main=mx.labels[i],ylim=c(-4,4))
par(new=T)
plot(mMeanLenControl,select=i,ylim=c(-4,4), col=2,ylab="")
legend(-1,-1.5,legend = c("Original","With length control"),col=1:2,lty=1, bty='n')
}
par(mfrow=c(1,1))
coef(m0)
table(dataloan2$cat)
