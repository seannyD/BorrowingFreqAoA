s(phonlengthscale, k=3) +
s(AoAscale) +
s(subtlexzipfscale) +
s(concscale) +
s(cat,bs='re')+
s(cat,phonlengthscale,bs='re')+
s(cat,AoAscale,bs='re')+
s(cat,subtlexzipfscale,bs='re')+
s(cat,concscale,bs='re') +
te(subtlexzipfscale,phonlengthscale),
data = dutch,
family='binomial')
lrtest(m0.dutch,m3.dutch)
```
No significant improvement.
So no interactions are necessary.
px = plot.gam(m0.dutch,select=1, xlab="Word length", ylab="Log odds of borrowing",shade = T)
plen = rescaleGam(px, 1, dutch$phonlengthscale,"Word length") + ggtitle("Dutch")
paoa = rescaleGam(px, 2, dutch$AoAscale,"Age of acquisition") + ggtitle("")
pfreq = rescaleGam(px, 3, dutch$AoAscale,"Frequency") + ggtitle("")
pconc = rescaleGam(px, 4, dutch$concscale,"Concreteness") + ggtitle("Dutch")
pconc
plot_smooth(m0.dutch)
plot_smooth(m0.dutch,'concscale')
summary(m0.dutch)
plot(m0.dutch)
px = plot.gam(m0.dutch,select=1, xlab="Word length", ylab="Log odds of borrowing",shade = T)
plen = rescaleGam(px, 1, dutch$phonlengthscale,"Word length") + ggtitle("Dutch")
paoa = rescaleGam(px, 2, dutch$AoAscale,"Age of acquisition") + ggtitle("")
pfreq = rescaleGam(px, 3, dutch$AoAscale,"Frequency") + ggtitle("")
pconc = rescaleGam(px, 4, dutch$concscale,"Concreteness") + ggtitle("Dutch")
plen
pfreq
px = plot_smooth(m0.dutch,view="subtlexzipfscale",
rm.ranef = T,print.summary=F)
summary(m0.dutch)
px = plot_smooth(m0.dutch,view="subtlexzipfscale",
rm.ranef = T,print.summary=F)
px$fv$fit = logit2per(px$fv$fit)
px$fv$ul = logit2per(px$fv$ul)
px$fv$ll = logit2per(px$fv$ll)
px$fv$subtlexzipfscale = px$fv$subtlexzipfscale * attr(dutch$subtlexzipfscale,"scaled:scale") + attr(dutch$subtlexzipfscale,"scaled:center")
gFreqO = ggplot(px$fv, aes(x=subtlexzipfscale,y=fit)) +
geom_ribbon(aes(ymin=ll,ymax=ul), alpha=0.3) +
geom_line(size=2) +
ylab("Probability of borrowing") +
xlab("Frequency") +
coord_cartesian(ylim=c(0,1))
getSmoothPlot = function(model, view, label){
px = plot_smooth(model,view=view,
rm.ranef = T,print.summary=F)
px$fv$fit = logit2per(px$fv$fit)
px$fv$ul = logit2per(px$fv$ul)
px$fv$ll = logit2per(px$fv$ll)
px$fv$subtlexzipfscale = px$fv$subtlexzipfscale * attr(dutch[,view],"scaled:scale") + attr(dutch[,view],"scaled:center")
ggplot(px$fv, aes(x=subtlexzipfscale,y=fit)) +
geom_ribbon(aes(ymin=ll,ymax=ul), alpha=0.3) +
geom_line(size=2) +
ylab("Probability of borrowing") +
xlab(label) +
coord_cartesian(ylim=c(0,1))
}
gFreqO =getSmoothPlot(m0.dutch,"subtlexzipfscale","Frequency")
pfreq =getSmoothPlot(m0.dutch,"subtlexzipfscale","Frequency")
plen =getSmoothPlot(m0.dutch,"phonlengthscale","Length")
paoa =getSmoothPlot(m0.dutch,"AoAscale","AoA")
pconc =getSmoothPlot(m0.dutch,"concscale","Concreteness")
pfreq =getSmoothPlot(m0.dutch,"subtlexzipfscale","Frequency")
plen =getSmoothPlot(m0.dutch,"phonlengthscale","Length")
paoa =getSmoothPlot(m0.dutch,"AoAscale","AoA")
pconc =getSmoothPlot(m0.dutch,"concscale","Concreteness")
pconc
grid.arrange(plen,pfreq,paoa, nrow=1)
dutch$phonlengthscale
dutch$phonlengthscale
getSmoothPlot = function(model, view, label){
px = plot_smooth(model,view=view,
rm.ranef = T,print.summary=F)
px$fv$fit = logit2per(px$fv$fit)
px$fv$ul = logit2per(px$fv$ul)
px$fv$ll = logit2per(px$fv$ll)
px$fv[,view] = px$fv[,view] * attr(dutch[,view],"scaled:scale") + attr(dutch[,view],"scaled:center")
ggplot(px$fv, aes_string(x=view,y="fit")) +
geom_ribbon(aes(ymin=ll,ymax=ul), alpha=0.3) +
geom_line(size=2) +
ylab("Probability of borrowing") +
xlab(label) +
coord_cartesian(ylim=c(0,1))
}
pfreq =getSmoothPlot(m0.dutch,"subtlexzipfscale","Frequency")
plen =getSmoothPlot(m0.dutch,"phonlengthscale","Length")
paoa =getSmoothPlot(m0.dutch,"AoAscale","AoA")
pconc =getSmoothPlot(m0.dutch,"concscale","Concreteness")
pconc
grid.arrange(plen,pfreq,paoa, nrow=1)
getSmoothPlot = function(model, view, label){
px = plot_smooth(model,view=view,
rm.ranef = T,print.summary=F)
px$fv$fit = logit2per(px$fv$fit)
px$fv$ul = logit2per(px$fv$ul)
px$fv$ll = logit2per(px$fv$ll)
px$fv[,view] = px$fv[,view] * attr(dutch[,view],"scaled:scale") + attr(dutch[,view],"scaled:center")
ggplot(px$fv, aes_string(x=view,y="fit")) +
geom_ribbon(aes(ymin=ll,ymax=ul), alpha=0.3) +
geom_line(size=2) +
ylab("Probability of borrowing") +
xlab(label) +
coord_cartesian(ylim=c(0,0.6))
}
pfreq =getSmoothPlot(m0.dutch,"subtlexzipfscale","Frequency")
plen =getSmoothPlot(m0.dutch,"phonlengthscale","Length")
paoa =getSmoothPlot(m0.dutch,"AoAscale","AoA")
pconc =getSmoothPlot(m0.dutch,"concscale","Concreteness")
pconc
grid.arrange(plen,pfreq,paoa, nrow=1)
pfreq =getSmoothPlot(m0.dutch,"subtlexzipfscale","Frequency")
plen =getSmoothPlot(m0.dutch,"phonlengthscale","Word Length")
paoa =getSmoothPlot(m0.dutch,"AoAscale","Age of acquisition")
pconc =getSmoothPlot(m0.dutch,"concscale","Concreteness")
pconc
grid.arrange(plen,pfreq,paoa, nrow=1)
getSmoothPlot = function(model, view, label){
px = plot_smooth(model,view=view,
rm.ranef = F,print.summary=F)
px$fv$fit = logit2per(px$fv$fit)
px$fv$ul = logit2per(px$fv$ul)
px$fv$ll = logit2per(px$fv$ll)
px$fv[,view] = px$fv[,view] * attr(dutch[,view],"scaled:scale") + attr(dutch[,view],"scaled:center")
ggplot(px$fv, aes_string(x=view,y="fit")) +
geom_ribbon(aes(ymin=ll,ymax=ul), alpha=0.3) +
geom_line(size=2) +
ylab("Probability of borrowing") +
xlab(label) +
coord_cartesian(ylim=c(0,0.6))
}
pfreq =getSmoothPlot(m0.dutch,"subtlexzipfscale","Frequency")
plen =getSmoothPlot(m0.dutch,"phonlengthscale","Word Length")
paoa =getSmoothPlot(m0.dutch,"AoAscale","Age of acquisition")
pconc =getSmoothPlot(m0.dutch,"concscale","Concreteness")
pconc
grid.arrange(plen,pfreq,paoa, nrow=1)
head(dutch$cat)
dataloan2
---
title: "Age of acquisition and borrowing: English"
output: pdf_document
---
```{r echo=F,eval=F}
setwd("~/Documents/MPI/MonaghanAoA/Stats 2/analysis/")
# TODO: plot model effects without random effects for main model (done for objective measures)
```
# Load libraries
```{r warning=F, message=F}
library(mgcv)
library(sjPlot)
library(lattice)
library(ggplot2)
library(dplyr)
library(party)
library(lmtest)
library(gridExtra)
library(scales)
library(itsadug)
logit2per = function(X){
return(exp(X)/(1+exp(X)))
}
rescaleGam = function(px, n, xvar, xlab=""){
y = logit2per(px[[n]]$fit)
x = px[[n]]$x *attr(xvar,"scaled:scale") + attr(xvar,"scaled:center")
se.upper = logit2per(px[[n]]$fit+px[[n]]$se)
se.lower = logit2per(px[[n]]$fit-px[[n]]$se)
dx = data.frame(x=x,y=y,ci.upper=se.upper,ci.lower=se.lower)
plen = ggplot(dx, aes(x=x,y=y))+
geom_ribbon(aes(ymin=ci.lower,ymax=ci.upper), alpha=0.3)+
geom_line(size=1) +
xlab(xlab)+
ylab("Probability of borrowing")+
coord_cartesian(ylim = c(0,1))
return(plen)
}
```
# Load data
-  word: Orthographic form
-  borrowing: variable from WOLD indicating level of evidence for borrowing:
-  1 = definately borrowed
-  5 = no evidence of borrowing
-  age_oldest, age_youngest: Dates from WOLD indicating estiamte of data of entry into English
-  phonology:  Phonological form
-  phonlength:  Number of segments in the phonological form
-  AoA: Age of acquisition ratings from Kuperman, Stadthagen-Gonzalez, and Brysbaert (2012).
-  AoA_obj: Objective, test-based age of acuqisition from Brysbaert & Biemiller (2017)
-  subtlexzipf:  Log frequency of word from the SUBTLEX database
-  conc:  Concreteness ratings from Brysbaert, Warriner, & Kuperman (2014)
-  cat: Dominant part of speech according to SUBTLEX.
-  bor15:  Conversion of the WOLD borrowing variable into a numeric (0 = not borrowed, 1 = borrowed)
```{r}
dataloan <- read.csv("../data/loanword8.csv",stringsAsFactors = F)
dataloan$bor15 <- ifelse(dataloan$borrowing==1,1, ifelse(dataloan$borrowing==5,0,NA))
dataloan$bor15.cat <- factor(dataloan$bor15)
```
Convert to numbers.
```{r warning=F}
dataloan$subtlexzipf = as.numeric(dataloan$subtlexzipf)
dataloan$AoA = as.numeric(dataloan$AoA)
dataloan$conc = as.numeric(dataloan$conc)
aoaSD = sd(dataloan$AoA,na.rm = T)
aoaMean = mean(dataloan$AoA/aoaSD,na.rm=T)
dataloan$cat = factor(dataloan$cat)
```
Select only complete cases.
```{r}
dataloan2 = dataloan[complete.cases(dataloan[,
c("phonlength","AoA",
"subtlexzipf", "cat",
'conc','bor15')]),]
```
Scale and center:
```{r}
dataloan2$AoAscale <- scale(dataloan2$AoA)
dataloan2$subtlexzipfscale <- scale(dataloan2$subtlexzipf)
phonlength.center = median(dataloan2$phonlength)
dataloan2$phonlengthscale <-
dataloan2$phonlength - phonlength.center
phonlength.scale = sd(dataloan2$phonlengthscale)
dataloan2$phonlengthscale = dataloan2$phonlengthscale/phonlength.scale
attr(dataloan2$phonlengthscale,"scaled:scale") = phonlength.scale
attr(dataloan2$phonlengthscale,"scaled:center") = phonlength.center
dataloan2$concscale <- scale(dataloan2$conc)
dataloan2$cat = relevel(dataloan2$cat,"Noun")
dataloan2$AoA_objscaled = scale(dataloan2$AoA_obj)
head(dataloan2$cat)
table(dutch$cat)
setwd("~/Documents/MPI/MonaghanAoA/Stats 2/analysis/")
dutch = read.csv("../data/WordData_Dutch2.csv", stringsAsFactors = F)
dutch.loan = read.csv("../data/wold-dataset.cldf/wold-vocabulary-12.csv", stringsAsFactors = F)
# remove brackets
dutch.loan$word = gsub(" *\\(.*?\\) *","",dutch.loan$Value)
dutch.loan$age.oldest =
sapply(dutch.loan$age, function(X){
x = strsplit(X,'-')[[1]][1]
if(is.na(as.numeric(x))){
return(X)
} else{
return(as.numeric(x))
}
})
dutch.loan$age.oldest.num = 2000 - dutch.loan$age.oldest
dutch.loan$age.youngest = as.numeric(
sapply(dutch.loan$age, function(X){
x = strsplit(X,'-')[[1]]
x[length(x)]
})
)
dutch.loan$age.youngest.num = 2000 - dutch.loan$age.youngest
matchx =  match(dutch$spelling, dutch.loan$Value)
for(v in c("Borrowed",'age','age.youngest','age.oldest','age.youngest.num','age.oldest.num')){
dutch[,v] = dutch.loan[matchx,v]
}
dutch$aoa = as.numeric(dutch$aoa)
write.csv(dutch,"../data/loanwords_Dutch.csv", row.names = F)
dutch = read.csv("../data/loanwords_Dutch.csv", stringsAsFactors = F)
# Make Rdat dataframe:
dutch$bor15 = ifelse(dutch$Borrowed=="1. clearly borrowed",1, ifelse(dutch$Borrowed=="5. no evidence for borrowing",0,NA))
dutch$cat = factor(dutch$subtlex.dominant.pos)
dutch = dutch[complete.cases(dutch[,c("bor15","length",'aoa','subtlex.dominant.pos.frequency','concreteness','cat')]),]
dutch$AoAscale <- scale(as.numeric(dutch$aoa))
dutch$subtlexzipfscale <- log10(as.numeric(dutch$subtlex.dominant.pos.frequency))
dutch$subtlexzipfscale = scale(dutch$subtlexzipfscale)
dutch$phonlengthscale <- scale(as.numeric(dutch$length))
dutch$concscale <- scale(as.numeric(dutch$concreteness))
dutch$bor15.cat = factor(dutch$bor15)
dutch$cat = relevel(dutch$cat,"N")
save(dutch,file="../data/loanwords_Dutch.Rdat")
---
title: "Age of acquisition and borrowing: Dutch"
output: pdf_document
---
```{r echo=F,eval=F}
setwd("~/Documents/MPI/MonaghanAoA/Stats 2/analysis/")
```
# Load libraries
```{r warning=F, message=F}
library(mgcv)
library(sjPlot)
library(lattice)
library(ggplot2)
library(gplots)
library(dplyr)
library(party)
library(lmtest)
library(gridExtra)
library(itsadug)
library(car)
library(caret)
library(scales)
logit2per = function(X){
return(exp(X)/(1+exp(X)))
}
rescaleGam = function(px, n, xvar, xlab=""){
y = logit2per(px[[n]]$fit)
x = px[[n]]$x *attr(xvar,"scaled:scale") + attr(xvar,"scaled:center")
se.upper = logit2per(px[[n]]$fit+px[[n]]$se)
se.lower = logit2per(px[[n]]$fit-px[[n]]$se)
dx = data.frame(x=x,y=y,ci.upper=se.upper,ci.lower=se.lower)
plen = ggplot(dx, aes(x=x,y=y))+
geom_ribbon(aes(ymin=ci.lower,ymax=ci.upper), alpha=0.3)+
geom_line(size=1) +
xlab(xlab)+
ylab("Probability of borrowing")+
coord_cartesian(ylim = c(0,1))
return(plen)
}
```
# Load data
```{r}
load("../data/loanwords_Dutch.Rdat")
```
# Part of speech
```{r}
catx = data.frame(
PoS = tapply(dutch$cat, dutch$cat, function(X){as.character(X[1])}),
mean = tapply(dutch$bor15, dutch$cat, mean),
n = tapply(dutch$bor15, dutch$cat, length)
)
catx = catx[order(catx$mean, decreasing = T),]
catx$PoS = factor(catx$PoS, levels = catx[order(catx$mean, decreasing = T),]$PoS)
posg = ggplot(catx, aes(x=mean, y=PoS)) +
geom_point(size=2) +
ylab("Part of speech") +
xlab("Proportion of words borrowed")+
scale_x_continuous(labels=percent_format()) +
geom_text(aes(label=n), nudge_y=0.4)
pdf("../results/graphs/POS_Borrowing_Dutch.pdf",
width = 6,
height = 4)
posg
dev.off()
catx$mean= catx$mean*100
write.csv(catx, "../results/Dutch_POS_BorrowingProportions.csv", row.names = F)
```
# GAM model
Dutch data has `r nrow(dutch)` datapoints.
The range of the length variable limits the number of knots that the gam model can fit:
```{r}
m0.dutch = bam(bor15.cat ~
s(phonlengthscale, k=3) +
s(AoAscale) +
s(subtlexzipfscale) +
s(concscale) +
s(cat,bs='re')+
s(cat,phonlengthscale,bs='re')+
s(cat,AoAscale,bs='re')+
s(cat,subtlexzipfscale,bs='re')+
s(cat,concscale,bs='re'),
data = dutch,
family='binomial')
```
```{r}
summary(m0.dutch)
getSmoothPlot = function(model, view, label){
px = plot_smooth(model,view=view,
rm.ranef = T,print.summary=F)
px$fv$fit = logit2per(px$fv$fit)
px$fv$ul = logit2per(px$fv$ul)
px$fv$ll = logit2per(px$fv$ll)
px$fv[,view] = px$fv[,view] * attr(dutch[,view],"scaled:scale") + attr(dutch[,view],"scaled:center")
ggplot(px$fv, aes_string(x=view,y="fit")) +
geom_ribbon(aes(ymin=ll,ymax=ul), alpha=0.3) +
geom_line(size=2) +
ylab("Probability of borrowing") +
xlab(label) +
coord_cartesian(ylim=c(0,0.6))
}
pfreq =getSmoothPlot(m0.dutch,"subtlexzipfscale","Frequency")
plen =getSmoothPlot(m0.dutch,"phonlengthscale","Word Length")
paoa =getSmoothPlot(m0.dutch,"AoAscale","Age of acquisition")
pconc =getSmoothPlot(m0.dutch,"concscale","Concreteness")
pconc
grid.arrange(plen,pfreq,paoa, nrow=1)
px = plot.gam(m0.dutch,select=1, xlab="Word length", ylab="Log odds of borrowing",shade = T)
plen = rescaleGam(px, 1, dutch$phonlengthscale,"Word length") + ggtitle("Dutch")
paoa = rescaleGam(px, 2, dutch$AoAscale,"Age of acquisition") + ggtitle("")
pfreq = rescaleGam(px, 3, dutch$AoAscale,"Frequency") + ggtitle("")
pconc = rescaleGam(px, 4, dutch$concscale,"Concreteness") + ggtitle("Dutch")
pconc
grid.arrange(plen,pfreq,paoa, nrow=1)
getSmoothPlot = function(model, view, label){
px = plot_smooth(model,view=view,
rm.ranef = T,print.summary=F)
px$fv$fit = logit2per(px$fv$fit)
px$fv$ul = logit2per(px$fv$ul)
px$fv$ll = logit2per(px$fv$ll)
px$fv[,view] = px$fv[,view] * attr(dutch[,view],"scaled:scale") + attr(dutch[,view],"scaled:center")
ggplot(px$fv, aes_string(x=view,y="fit")) +
geom_ribbon(aes(ymin=ll,ymax=ul), alpha=0.3) +
geom_line(size=2) +
ylab("Probability of borrowing") +
xlab(label) +
coord_cartesian(ylim=c(0,0.6))
}
pfreq =getSmoothPlot(m0.dutch,"subtlexzipfscale","Frequency")
plen =getSmoothPlot(m0.dutch,"phonlengthscale","Word Length")
paoa =getSmoothPlot(m0.dutch,"AoAscale","Age of acquisition")
pconc =getSmoothPlot(m0.dutch,"concscale","Concreteness")
pconc
grid.arrange(plen,pfreq,paoa, nrow=1)
pdf("../results/graphs/Dutch_ModelResults.pdf_NoRF.pdf",
height =3,width = 8)
grid.arrange(plen,pfreq,paoa, nrow=1)
dev.off()
pdf("../results/graphs/Dutch_ModelResults_NoRF.pdf",
height =3,width = 8)
grid.arrange(plen,pfreq,paoa, nrow=1)
dev.off()
getSmoothPlot = function(model, view, label){
px = plot_smooth(model,view=view,
rm.ranef = T,print.summary=F)
px$fv$fit = logit2per(px$fv$fit)
px$fv$ul = logit2per(px$fv$ul)
px$fv$ll = logit2per(px$fv$ll)
px$fv[,view] = px$fv[,view] * attr(dutch[,view],"scaled:scale") + attr(dutch[,view],"scaled:center")
ggplot(px$fv, aes_string(x=view,y="fit")) +
geom_ribbon(aes(ymin=ll,ymax=ul), alpha=0.3) +
geom_line(size=1) +
ylab("Probability of borrowing") +
xlab(label) +
coord_cartesian(ylim=c(0,0.6))
}
pfreq =getSmoothPlot(m0.dutch,"subtlexzipfscale","Frequency")
plen =getSmoothPlot(m0.dutch,"phonlengthscale","Word Length")
paoa =getSmoothPlot(m0.dutch,"AoAscale","Age of acquisition")
pconc =getSmoothPlot(m0.dutch,"concscale","Concreteness")
pconc
grid.arrange(plen,pfreq,paoa, nrow=1)
pdf("../results/graphs/Dutch_ModelResults_NoRF.pdf",
height =3,width = 8)
grid.arrange(plen,pfreq,paoa, nrow=1)
dev.off()
plot(m0)
plot(m0.dutch)
ranef(m0.dutch)
m0.dutch
m0.dutch$coefficients
m0.dutch$coefficients["s(cat)"]
x = m0.dutch$coefficients
x[grepl("s(cat)",names(x))]
names(x)
x[grepl("s\\(cat\\)",names(x))]
tapply(dutch$bor15,dutch$cat,mean)
plot(tapply(dutch$bor15,dutch$cat,mean),
mc[grepl("s\\(cat\\)",names(mc))])
mc = m0.dutch$coefficients
mc[grepl("s\\(cat\\)",names(mc))]
plot(tapply(dutch$bor15,dutch$cat,mean),
mc[grepl("s\\(cat\\)",names(mc))])
plot(
tapply(dutch$bor15,dutch$cat,mean),
logit2per(mc[grepl("s\\(cat\\)",names(mc))]))
m0.dutch$coefficients
plot(
tapply(dutch$bor15,dutch$cat,mean),
logit2per(m0.dutch$coefficients[1] +
mc[grepl("s\\(cat\\)",names(mc))]))
plot(
tapply(dutch$bor15,dutch$cat,mean),
logit2per(m0.dutch$coefficients[1] +
mc[grepl("s\\(cat\\)",names(mc))]),
xlab="Raw proportions",
ylab="Model estimates")
names(mc)
plot(raw, model.est,
xlab="Raw proportions",
ylab="Model estimates")
text(raw, model.est, names(raw))
raw = tapply(dutch$bor15,dutch$cat,mean)
model.est = logit2per(m0.dutch$coefficients[1] +
mc[grepl("s\\(cat\\)",names(mc))])
plot(raw, model.est,
xlab="Raw proportions",
ylab="Model estimates")
text(raw, model.est, names(raw))
plot(raw, model.est,
xlab="Raw proportions",
ylab="Model estimates",
col="white")
text(raw, model.est, names(raw))
plot(raw, model.est,
xlab="Raw proportions",
ylab="Model estimates",
col="white")
text(raw, model.est, names(raw),
ylim=c(0,0.3),
xlim=c(0,0.3))
plot(raw, model.est,
xlab="Raw proportions",
ylab="Model estimates",
col="white",
ylim=c(0,0.3),
xlim=c(0,0.3))
text(raw, model.est, names(raw))
abline(0,1,col='gray')
plot(raw, model.est,
xlab="Raw proportions",
ylab="Model estimates",
col="white",
ylim=c(0,0.3),
xlim=c(0,0.3))
abline(0,1,col='gray')
text(raw, model.est, names(raw))
plot_smooth(m0.dutch,'cat')
?plot_smooth(m0.dutch,'cat')
get_coefs(m0.dutch)
